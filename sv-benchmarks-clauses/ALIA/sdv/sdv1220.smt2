(set-info :origin "driver benchmark extracted from Microsoft SDV")
(set-logic HORN)
(declare-fun Proc4 (Int Bool Int) Bool)
(declare-fun Proc22 (Int Bool) Bool)
(declare-fun Proc16 (Int Bool) Bool)
(declare-fun Proc9 (Int Bool Int Int Int Int Int) Bool)
(declare-fun Proc25 (Int Bool Int) Bool)
(declare-fun Proc26 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc20 (Int Bool Int Bool Int) Bool)
(declare-fun Proc8 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc2 (Int Bool) Bool)
(declare-fun Proc3 (Int Bool Int Int Int) Bool)
(declare-fun Proc30 (Int Bool) Bool)
(declare-fun Proc1 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc17 (Int Bool) Bool)
(declare-fun Proc5 (Int Bool Int) Bool)
(declare-fun Proc6 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc28 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc15 (Int Bool) Bool)
(declare-fun Proc29 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc0 (Int Bool Int Int) Bool)
(declare-fun Proc19 (Int Bool Int) Bool)
(declare-fun Proc7 (Int Bool Int Int Int) Bool)
(declare-fun Proc13 (Int Bool Int) Bool)
(declare-fun Proc14 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc18 (Int Bool Int) Bool)
(declare-fun Proc24 (Int Bool Int Int Int) Bool)
(declare-fun Proc23 (Int Bool) Bool)
(declare-fun Proc27 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc21 (Int Bool Int Int) Bool)
(declare-fun Proc11 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc31 (Int Bool Int Bool Int) Bool)
(declare-fun Proc10 (Int Bool Int) Bool)
(declare-fun Proc12 (Int Bool Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool))
  (let ((a!1 (and (not (<= N (+ 24 P))) (not (<= N O))))
        (a!2 (and (not (<= L (+ 1 M))) (not (<= L N))))
        (a!3 (and (not (<= J (+ 1 K))) (not (<= J L)))))
  (let ((a!4 (or (not Q)
                 (not (= P O))
                 (not a!1)
                 (not (= M N))
                 (not a!2)
                 (not (= K L))
                 (not a!3)
                 (<= I 27)
                 (= H 0)
                 (= G 0)
                 (= F 0)
                 (not (Proc0 J Q P 20))
                 (not (= E D))
                 (not (and (= C E) (= B J))))))
    (=> (not a!4) (Proc1 O Q H A C B))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (Q Bool))
  (let ((a!1 (not (or (not Q) (not (Proc2 D Q)) (= C 0) (not (= B 0))))))
    (=> a!1 (Proc3 D Q A C B)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (Q Bool))
  (let ((a!1 (or (not (= F G)) (not (and (= E H) (= D F)))))
        (a!2 (and (not (<= B (+ 1 C))) (not (<= B G)))))
  (let ((a!3 (or (not (= C G))
                 (not a!2)
                 (not (and (Proc7 B Q C H A) (= F A)))
                 (not (and (= E H) (= D F))))))
  (let ((a!4 (not (or (not Q)
                      (not (Proc4 M Q L))
                      (not (Proc5 M Q L))
                      (= K 0)
                      (= J 0)
                      (not (Proc6 M Q I L H G))
                      (and a!1 a!3)))))
    (=> a!4 (Proc8 M Q K L E D)))))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool)
         (R Int)
         (S Int)
         (T Int))
  (let ((a!1 (and (not (<= R (+ 4 T))) (not (<= R S))))
        (a!2 (or (not (Proc9 R Q O P N T M)) (not (and (= L 259) (= K R)))))
        (a!4 (or (not (Proc9 R Q J P I T H)) (not (and (= L 259) (= K R)))))
        (a!6 (or (not (Proc9 R Q G P F T E)) (not (and (= L 259) (= K R)))))
        (a!8 (or (not (Proc9 R Q D P C T B)) (not (and (= L 259) (= K R))))))
  (let ((a!3 (and a!2 (not (and (= L 259) (= K R)))))
        (a!5 (and a!4 (not (and (= L 259) (= K R)))))
        (a!7 (and a!6 (not (and (= L 259) (= K R)))))
        (a!9 (and a!8 (not (and (= L 259) (= K R))))))
  (let ((a!10 (or (not Q)
                  (not (= T S))
                  (not a!1)
                  (and (or (= P 0) a!3)
                       (or (= P 0) a!5)
                       (or (= P 0) a!7)
                       (or (= P 0) a!9)))))
    (=> (not a!10) (Proc6 S Q A P L K)))))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> Q (Proc4 B Q A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (Q Bool))
  (let ((a!1 (and (not (<= E (+ 1 G))) (not (<= E F)))))
  (let ((a!2 (not (or (not Q)
                      (not (= G F))
                      (not a!1)
                      (not (Proc10 E Q G))
                      (not (= D E))))))
    (=> a!2 (Proc11 F Q C B A D))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (Q Bool))
  (let ((a!1 (and (not (<= E (+ 1 G))) (not (<= E F)))))
  (let ((a!2 (not (or (not Q)
                      (not (= G F))
                      (not a!1)
                      (not (Proc10 E Q G))
                      (not (= D E))))))
    (=> a!2 (Proc12 F Q C B A D))))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> Q (Proc10 B Q A))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> false (Proc13 B Q A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (Q Bool))
  (let ((a!1 (and (not (<= D (+ 1 F))) (not (<= D E))))
        (a!3 (or (not (and (= G 0) (= C E))) (not (= B C)))))
  (let ((a!2 (or (= G 0)
                 (not (= F E))
                 (not a!1)
                 (not (and (Proc13 D Q F) (= C D)))
                 (not (= B C)))))
    (=> (not (or (not Q) (and a!2 a!3))) (Proc7 E Q A G B))))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (Q Bool))
  (let ((a!1 (and (not (<= G (+ 1 I))) (not (<= G H))))
        (a!3 (or (not (= J (- 1073741436)))
                 (not (Proc11 H Q C K J B))
                 (not (= F B))
                 (not (= E F))))
        (a!4 (or (not (= J (- 1073741637)))
                 (not (Proc11 H Q C K J B))
                 (not (= F B))
                 (not (= E F))))
        (a!5 (or (not (= J (- 1073741810)))
                 (not (Proc11 H Q C K J B))
                 (not (= F B))
                 (not (= E F)))))
  (let ((a!2 (or (not (= J (- 1073741738)))
                 (not (= I H))
                 (not a!1)
                 (not (and (Proc13 G Q I) (= F G)))
                 (not (= E F))))
        (a!6 (and a!5
                  (or (= J (- 1073741810))
                      (not (Proc12 H Q C K J A))
                      (not (= F A))
                      (not (= E F)))))
        (a!8 (or (not (= I H))
                 (not a!1)
                 (not (and (Proc13 G Q I) (= F G)))
                 (not (= E F)))))
  (let ((a!7 (and a!4 (or (= J (- 1073741637)) a!6))))
  (let ((a!9 (and a!3 (or (= J (- 1073741436)) a!7) a!8)))
  (let ((a!10 (and a!2 (or (= J (- 1073741738)) (= D 0) a!9))))
    (=> (not (or (not Q) (= K 0) a!10)) (Proc14 H Q C K J E)))))))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc15 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc16 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc17 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool)
         (U Bool)
         (V Bool)
         (W Bool))
  (let ((a!1 (not (and (not (<= H 0)) (Proc18 H W G))))
        (a!2 (not (and (= C E) (= U V) (= B F)))))
  (let ((a!3 (or (not (and (= E D) (not V))) a!2))
        (a!4 (or (= (not Q) W) (not (and (= E A) (= V Q))) a!2)))
  (let ((a!5 (not (or (not W)
                      a!1
                      (not (Proc17 G W))
                      (not (Proc16 G W))
                      (not (Proc15 G W))
                      (not (Proc19 G W F))
                      (and a!3 a!4)))))
    (=> a!5 (Proc20 H W C U B)))))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> Q (Proc5 B Q A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (Q Bool))
  (let ((a!1 (and (or (not (= G F)) (not (= E G)))
                  (or (not (= G D)) (not (= E G)))
                  (or (not (= G C)) (not (= E G))))))
    (=> (not (or (not Q) a!1)) (Proc21 B Q A E)))))
(assert (forall ((A Int) (B Int) (C Int) (Q Bool)) (=> Q (Proc0 C Q B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (Q Bool))
  (let ((a!1 (not (or (not Q)
                      (not (Proc22 E Q))
                      (not (Proc3 E Q D C B))
                      (not (Proc23 E Q))
                      (not (= A B))))))
    (=> a!1 (Proc24 E Q D C A)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (Q Bool))
  (let ((a!1 (not (or (not Q) (not (Proc21 G Q F E)) (not (= D 0))))))
    (=> a!1 (Proc9 G Q C F B A D)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool))
  (let ((a!1 (or (not Q)
                 (= H 0)
                 (= G 0)
                 (not (Proc25 F Q H))
                 (not (Proc8 F Q E H D C))
                 (not (and (= B D) (= A C))))))
    (=> (not a!1) (Proc26 F Q E H B A)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool))
  (let ((a!1 (or (not Q)
                 (= H 0)
                 (= G 0)
                 (not (Proc25 F Q H))
                 (not (Proc8 F Q E H D C))
                 (not (and (= B D) (= A C))))))
    (=> (not a!1) (Proc27 F Q E H B A)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool))
  (let ((a!1 (or (not Q)
                 (= H 0)
                 (= G 0)
                 (not (Proc25 F Q H))
                 (not (Proc8 F Q E H D C))
                 (not (and (= B D) (= A C))))))
    (=> (not a!1) (Proc28 F Q E H B A)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool))
  (let ((a!1 (or (not Q)
                 (= H 0)
                 (= G 0)
                 (not (Proc25 F Q H))
                 (not (Proc8 F Q E H D C))
                 (not (and (= B D) (= A C))))))
    (=> (not a!1) (Proc29 F Q E H B A)))))
(assert (forall ((A Int) (B Int) (Q Bool))
  (=> (not (or (not Q) (= B 0))) (Proc25 A Q B))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc2 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool)
         (R Int)
         (S Int)
         (T Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int)
         (F1 Int)
         (G1 Int)
         (H1 Int)
         (I1 Int)
         (J1 Int)
         (K1 Int)
         (L1 Int)
         (M1 Int)
         (N1 Int)
         (O1 Int)
         (P1 Int))
  (let ((a!1 (and (not (<= N1 (+ 12 P1))) (not (<= N1 O1))))
        (a!2 (not (and (not (= G 0)) (= F H))))
        (a!4 (and (not (<= C (+ 1 D))) (not (<= C T)))))
  (let ((a!3 (and (or (not (<= 0 I)) (not (= G 1)) a!2 (not (= E F)))
                  (or (<= 0 I) (not (= G 0)) a!2 (not (= E F))))))
  (let ((a!5 (and (or (not (= F A)) (not (= E F)))
                  (or (not (= S A))
                      (not (<= 0 X))
                      (not (= R 1))
                      (= R 0)
                      (not (Proc26 S Q P O N M))
                      (not (<= 0 N))
                      (not (= L 1))
                      (= L 0)
                      (not (Proc28 M Q K J I H))
                      a!3))))
  (let ((a!6 (and (or (not (= S T))
                      (not (<= 0 X))
                      (not (= R 1))
                      (= R 0)
                      (not (Proc26 S Q P O N M))
                      (not (<= 0 N))
                      (not (= L 1))
                      (= L 0)
                      (not (Proc28 M Q K J I H))
                      a!3)
                  (or (not (= D T)) (not a!4) (not (Proc14 C Q D B X A)) a!5))))
  (let ((a!7 (not (or (not Q)
                      (not (= P1 O1))
                      (not a!1)
                      (not (Proc1 N1 Q M1 P1 L1 K1))
                      (not (<= 0 L1))
                      (not (= J1 1))
                      (= J1 0)
                      (not (Proc24 K1 Q I1 H1 G1))
                      (not (<= 0 G1))
                      (not (= F1 1))
                      (= F1 0)
                      (not (Proc30 K1 Q))
                      (not (Proc27 K1 Q E1 D1 C1 B1))
                      (not (<= 0 C1))
                      (not (= A1 1))
                      (= A1 0)
                      (not (Proc29 B1 Q Z Y X T))
                      a!6))))
    (=> a!7 (Proc19 O1 Q E)))))))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc22 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc23 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc30 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool)
         (R Int)
         (S Int)
         (T Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int)
         (F1 Int)
         (G1 Int)
         (H1 Int)
         (I1 Int)
         (J1 Int)
         (K1 Int)
         (L1 Int)
         (M1 Int)
         (N1 Int)
         (O1 Int)
         (P1 Int)
         (Q1 Int)
         (R1 Int)
         (S1 Int)
         (T1 Int)
         (U1 Int)
         (V1 Int)
         (W1 Int)
         (X1 Int)
         (Y1 Int)
         (Z1 Int)
         (A2 Int)
         (B2 Int)
         (C2 Int)
         (D2 Int)
         (E2 Int)
         (F2 Int)
         (G2 Int)
         (H2 Int))
  (let ((a!1 (and (not (<= F2 (+ 240 H2)))
                  (not (<= F2 G2))
                  (= E2 F2)
                  (not (<= D2 (+ 4 E2)))
                  (not (<= D2 F2))
                  (= C2 D2)
                  (not (<= B2 (+ 332 C2)))
                  (not (<= B2 D2))
                  (= A2 B2)
                  (not (<= Z1 (+ 4 A2)))
                  (not (<= Z1 B2))
                  (= Y1 Z1)
                  (not (<= X1 (+ 536 Y1)))
                  (not (<= X1 Z1))
                  (= W1 X1)
                  (not (<= V1 (+ 240 W1)))))
        (a!2 (and (not (<= V1 X1))
                  (= U1 V1)
                  (not (<= T1 (+ 240 U1)))
                  (not (<= T1 V1))
                  (= S1 T1)
                  (not (<= R1 (+ 536 S1)))
                  (not (<= R1 T1))
                  (= Q1 R1)
                  (not (<= P1 (+ 240 Q1)))
                  (not (<= P1 R1))
                  (= O1 P1)
                  (not (<= N1 (+ 4 O1)))
                  (not (<= N1 P1))
                  (= M1 N1)
                  (not (<= L1 (+ 536 M1)))
                  (not (<= L1 N1))
                  (= K1 L1)
                  (not (<= J1 (+ 332 K1)))
                  (not (<= J1 L1))
                  (= I1 J1)
                  (not (<= H1 (+ 240 I1)))
                  (not (<= H1 J1))
                  (= G1 H1)
                  (not (<= F1 (+ 240 G1)))
                  (not (<= F1 H1))
                  (= E1 F1)
                  (not (<= D1 (+ 332 E1)))
                  (not (<= D1 F1))
                  (= C1 D1)
                  (not (<= B1 (+ 4 C1)))
                  (not (<= B1 D1))
                  (= A1 B1)
                  (not (<= Z (+ 68 A1)))
                  (not (<= Z B1))
                  (= Y Z)
                  (not (<= X (+ 536 Y)))
                  (not (<= X Z))
                  (= T X)
                  (not (<= S (+ 240 T)))
                  (not (<= S X))
                  (= R S)
                  (not (<= P (+ 240 R)))
                  (not (<= P S))
                  (= O P)
                  (not (<= N (+ 240 O)))
                  (not (<= N P))
                  (= M N)
                  (not (<= L (+ 240 M)))
                  (not (<= L N))
                  (= K L)
                  (not (<= J (+ 240 K)))
                  (not (<= J L))
                  (= I J)
                  (not (<= H (+ 40 I)))
                  (not (<= H J))
                  (= G H)
                  (not (<= F (+ 332 G)))
                  (not (<= F H))
                  (= E F)
                  (not (<= D (+ 4 E)))
                  (not (<= D F))
                  (= C D)
                  (not (<= B (+ 40 C)))
                  (not (<= B D)))))
  (let ((a!3 (not (or (not Q) (not (= H2 G2)) (not a!1) (not a!2) (not (= A B))))))
    (=> a!3 (Proc18 G2 Q A))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (Q Bool) (U Bool) (V Bool))
  (let ((a!1 (or (not V) (not (and (Proc20 E true D U C) (not U))))))
    (=> (not a!1) (Proc31 E V B Q A)))))
(assert (let ((a!1 (exists ((V0 Int) (V1 Bool) (V2 Int) (V3 Bool) (V4 Int))
             (not (=> (and (Proc31 V0 V1 V2 V3 V4) (not false)) false)))))
  (not a!1)))

(check-sat)
