(set-info :origin "driver benchmark extracted from Microsoft SDV")
(set-logic HORN)
(declare-fun Proc13 (Int Int Bool Int) Bool)
(declare-fun Proc3 (Int Int Bool Int Int Int Int) Bool)
(declare-fun Proc10 (Int Int Bool Int Int Int) Bool)
(declare-fun Proc21 (Int Int Bool Int) Bool)
(declare-fun Proc4 (Int Int Bool) Bool)
(declare-fun Proc9 (Int Int Bool Int Int Bool Int) Bool)
(declare-fun Proc25 (Int Int Bool Int Int) Bool)
(declare-fun Proc29 (Int Int Bool Int Int) Bool)
(declare-fun Proc24 (Int Int Bool) Bool)
(declare-fun Proc6 (Int Int Bool Int) Bool)
(declare-fun Proc23 (Int Int Bool Int) Bool)
(declare-fun Proc27 (Int Int Bool) Bool)
(declare-fun Proc0 (Int Int Bool Int Int Int) Bool)
(declare-fun Proc26 (Int Int Bool Int Int Int) Bool)
(declare-fun Proc15 (Int Int Bool Int) Bool)
(declare-fun Proc11 (Int Int Bool Int) Bool)
(declare-fun Proc22 (Int Int Bool Int) Bool)
(declare-fun Proc19 (Int Int Bool Int) Bool)
(declare-fun Proc20 (Int Int Bool Int) Bool)
(declare-fun Proc30 (Int Int Bool) Bool)
(declare-fun Proc5 (Int Int Bool) Bool)
(declare-fun Proc12 (Int Int Bool Int) Bool)
(declare-fun Proc8 (Int Int Bool Int Int) Bool)
(declare-fun Proc28 (Int Int Bool) Bool)
(declare-fun Proc16 (Int Int Bool Int) Bool)
(declare-fun Proc31 (Int Int Bool Int Bool Int Int) Bool)
(declare-fun Proc7 (Int Int Bool Int) Bool)
(declare-fun Proc14 (Int Int Bool Int) Bool)
(declare-fun Proc17 (Int Int Bool Int) Bool)
(declare-fun Proc2 (Int Int Bool Int Int Int Int) Bool)
(declare-fun Proc18 (Int Int Bool Int) Bool)
(declare-fun Proc1 (Int Int Bool Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= F E))))))
    (=> a!1 (Proc0 D C G B A F)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (and (not (<= H (+ 1 J))) (not (<= H I)))))
  (let ((a!2 (or (not G)
                 (not (= J I))
                 (not a!1)
                 (not (Proc1 H F G J E))
                 (not (and (= D H) (= C E))))))
    (=> (not a!2) (Proc2 I F G B A D C))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= D 1))))))
    (=> a!1 (Proc1 C B G A D)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (or (not (= E 1))
                 (not (and (= D E) (= C F)))
                 (not (and (= B C) (= A D)))))
        (a!2 (or (= E 1)
                 (not (and (= D E) (= C F)))
                 (not (and (= B C) (= A D)))))
        (a!3 (or (not (= K 0))
                 (not (and (= D I) (= C J)))
                 (not (and (= B C) (= A D))))))
  (let ((a!4 (and (or (= K 0) (not (Proc2 J I G H K F E)) (and a!1 a!2)) a!3)))
    (=> (not (or (not G) a!4)) (Proc3 J I G H K B A))))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc4 B A G))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc5 B A G))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc6 B A G C)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Bool)
         (M Bool)
         (N Int)
         (O Int)
         (P Bool))
  (let ((a!1 (not (and (not (<= O 0)) (Proc7 O N P K))))
        (a!2 (not (and (= D F) (= C H) (= L M) (= B I)))))
  (let ((a!3 (or (= H 0) (not (and (= F E) (not M))) a!2))
        (a!4 (or (not (and (= H 0) (= G P))) (not (and (= F A) (= M G))) a!2)))
  (let ((a!5 (and (or (= H 1) (and a!3 a!4)) (or (not (= H 1)) (and a!3 a!4)))))
  (let ((a!6 (not (or (not P)
                      a!1
                      (not (Proc6 K N P J))
                      (not (Proc5 K J P))
                      (not (Proc4 K J P))
                      (not (Proc8 K J P I H))
                      a!5))))
    (=> a!6 (Proc9 O N P D C L B))))))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (and (not (<= H (+ 1 J))) (not (<= H I))))
        (a!2 (not (and (= C 0) (= B E) (= A D)))))
  (let ((a!3 (and (or (not (= D 1)) a!2) (or (= D 1) a!2))))
  (let ((a!4 (not (or (not G)
                      (not (= J I))
                      (not a!1)
                      (not (Proc3 H F G J 0 E D))
                      a!3))))
    (=> a!4 (Proc10 I F G C B A)))))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc11 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc12 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc13 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc14 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc15 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc16 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc17 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc18 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc19 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc20 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (G Bool))
  (let ((a!1 (or (not G) (not (= D (- 1073741823))) (not (= C D)))))
    (=> (not a!1) (Proc21 B A G C)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (let ((a!1 (not (or (not G) (not (= C 0))))))
    (=> a!1 (Proc22 B A G C)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (N Int)
         (O Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int)
         (W Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int))
  (let ((a!1 (and (or (= A1 0)
                      (not (Proc21 C1 B1 G D))
                      (not (= Y D))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (not (= C 1))
                      (= C 0)
                      (= A1 0)
                      (not (Proc21 C1 B1 G D))
                      (not (= Y D))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y))))))
  (let ((a!2 (and (or (= A1 0) a!1) (or (not (= B 1)) (= B 0) (= A1 0) a!1))))
  (let ((a!3 (and (or (= A1 0)
                      (not (Proc21 C1 B1 G Z))
                      (not (= Y Z))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G W))
                      (not (= Y W))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G V))
                      (not (= Y V))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G U))
                      (not (= Y U))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G T))
                      (not (= Y T))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G S))
                      (not (= Y S))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G R))
                      (not (= Y R))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (not (Proc21 C1 B1 G Q))
                      (not (= Y Q))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G O))
                      (not (= Y O))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G N))
                      (not (= Y N))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G K))
                      (not (= Y K))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (not (Proc21 C1 B1 G J))
                      (not (= Y J))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G I))
                      (not (= Y I))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G H))
                      (not (= Y H))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0)
                      (not (Proc21 C1 B1 G F))
                      (not (= Y F))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (not (Proc21 C1 B1 G E))
                      (not (= Y E))
                      (not (Proc25 C1 B1 G Y D1))
                      (= D1 0)
                      (not (= X Y)))
                  (or (= A1 0) a!2))))
  (let ((a!4 (not (or (not G)
                      (= D1 0)
                      (not (Proc23 C1 B1 G D1))
                      (= A1 0)
                      (not (Proc24 C1 B1 G))
                      a!3))))
    (=> a!4 (Proc26 C1 B1 G A D1 X))))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (G Bool))
  (let ((a!1 (not (or (not G)
                      (not (Proc27 E D G))
                      (not (Proc21 E D G C))
                      (not (Proc28 E D G))))))
    (=> a!1 (Proc29 E D G B A)))))
(assert (forall ((A Int) (B Int) (C Int) (G Bool))
  (=> (not (or (not G) (= C 0))) (Proc23 B A G C))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (N Int)
         (O Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int)
         (W Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int))
  (let ((a!1 (and (not (<= C1 (+ 12 E1))) (not (<= C1 D1))))
        (a!2 (or (not (= Q 1)) (not (and (= O R) (= N Q)))))
        (a!3 (or (= A1 0)
                 (not (Proc30 R Q G))
                 (not (Proc26 R Q G H F E))
                 (not (and (= O R) (= N Q)))))
        (a!4 (or (not (= A1 0)) (not (and (= O R) (= N Q)))))
        (a!5 (or (= Z 0)
                 (not (Proc30 R Q G))
                 (not (Proc29 R Q G D C))
                 (not (and (= O R) (= N Q)))))
        (a!6 (or (not (= Z 0)) (not (and (= O R) (= N Q)))))
        (a!7 (or (not (Proc0 R Q G B E1 A)) (not (and (= O R) (= N Q))))))
  (let ((a!8 (and a!3 a!4 a!5 a!6 (not (and (= O R) (= N Q))) a!7)))
  (let ((a!9 (and a!2
                  (or (= Q 1)
                      (not (Proc16 R Q G K))
                      (not (Proc17 R Q G J))
                      (not (Proc14 R Q G I))
                      a!8))))
  (let ((a!10 (not (or (not G)
                       (not (= E1 D1))
                       (not a!1)
                       (not (Proc12 C1 B1 G A1))
                       (not (Proc19 C1 B1 G Z))
                       (not (Proc13 C1 B1 G Y))
                       (not (Proc18 C1 B1 G X))
                       (not (Proc11 C1 B1 G W))
                       (not (Proc15 C1 B1 G V))
                       (not (Proc22 C1 B1 G U))
                       (not (Proc20 C1 B1 G T))
                       (not (Proc10 C1 B1 G S R Q))
                       a!9))))
    (=> a!10 (Proc8 D1 B1 G O N))))))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc24 B A G))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (G Bool)) (=> G (Proc25 D C G B A))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc30 B A G))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc27 B A G))))
(assert (forall ((A Int) (B Int) (G Bool)) (=> G (Proc28 B A G))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (N Int)
         (O Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int)
         (W Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int)
         (F1 Int)
         (G1 Int)
         (H1 Int)
         (I1 Int)
         (J1 Int)
         (K1 Int)
         (L1 Int)
         (M1 Int)
         (N1 Int)
         (O1 Int)
         (P1 Int)
         (Q1 Int)
         (R1 Int)
         (S1 Int)
         (T1 Int)
         (U1 Int)
         (V1 Int)
         (W1 Int)
         (X1 Int)
         (Y1 Int)
         (Z1 Int)
         (A2 Int)
         (B2 Int)
         (C2 Int))
  (let ((a!1 (and (= C2 B2)
                  (not (<= A2 (+ 4 C2)))
                  (not (<= A2 B2))
                  (= Z1 A2)
                  (not (<= Y1 (+ 332 Z1)))
                  (not (<= Y1 A2))
                  (= X1 Y1)
                  (not (<= W1 (+ 4 X1)))))
        (a!2 (and (not (<= W1 Y1))
                  (= V1 W1)
                  (not (<= U1 (+ 536 V1)))
                  (not (<= U1 W1))
                  (= T1 U1)
                  (not (<= S1 (+ 240 T1)))
                  (not (<= S1 U1))
                  (= R1 S1)
                  (not (<= Q1 (+ 240 R1)))
                  (not (<= Q1 S1))
                  (= P1 Q1)
                  (not (<= O1 (+ 240 P1)))
                  (not (<= O1 Q1))
                  (= N1 O1)
                  (not (<= M1 (+ 4 N1)))
                  (not (<= M1 O1))
                  (= L1 M1)
                  (not (<= K1 (+ 536 L1)))
                  (not (<= K1 M1))
                  (= J1 K1)
                  (not (<= I1 (+ 332 J1)))
                  (not (<= I1 K1))
                  (= H1 I1)
                  (not (<= G1 (+ 240 H1)))
                  (not (<= G1 I1))
                  (= F1 G1)
                  (not (<= E1 (+ 240 F1)))
                  (not (<= E1 G1))
                  (= D1 E1)
                  (not (<= C1 (+ 332 D1)))
                  (not (<= C1 E1))
                  (= B1 C1)
                  (not (<= A1 (+ 4 B1)))
                  (not (<= A1 C1))
                  (= Z A1)
                  (not (<= Y (+ 68 Z)))
                  (not (<= Y A1))
                  (= X Y)
                  (not (<= W (+ 240 X)))
                  (not (<= W Y))
                  (= V W)
                  (not (<= U (+ 240 V)))
                  (not (<= U W))
                  (= T U)
                  (not (<= S (+ 240 T)))
                  (not (<= S U))
                  (= R S)
                  (not (<= Q (+ 240 R)))
                  (not (<= Q S))
                  (= O Q)
                  (not (<= N (+ 240 O)))
                  (not (<= N Q))
                  (= K N)
                  (not (<= J (+ 40 K)))
                  (not (<= J N))
                  (= I J)
                  (not (<= H (+ 332 I)))
                  (not (<= H J))
                  (= F H)
                  (not (<= E (+ 4 F)))
                  (not (<= E H))
                  (= D E)
                  (not (<= C (+ 40 D)))
                  (not (<= C E)))))
  (let ((a!3 (not (or (not G) (not a!1) (not a!2) (not (= B C))))))
    (=> a!3 (Proc7 B2 A G B))))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Bool)
         (H Int)
         (I Int)
         (L Bool)
         (M Bool))
  (let ((a!1 (or (not M) (not (and (Proc9 I H true F E L D) (not L))))))
    (=> (not a!1) (Proc31 I H M C G B A)))))
(assert (let ((a!1 (exists ((V0 Int)
                    (V1 Int)
                    (V2 Bool)
                    (V3 Int)
                    (V4 Bool)
                    (V5 Int)
                    (V6 Int))
             (not (=> (and (Proc31 V0 V1 V2 V3 V4 V5 V6) (not false)) false)))))
  (not a!1)))

(check-sat)
