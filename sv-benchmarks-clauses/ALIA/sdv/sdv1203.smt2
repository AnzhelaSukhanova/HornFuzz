(set-info :origin "driver benchmark extracted from Microsoft SDV")
(set-logic HORN)
(declare-fun Proc16 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc8 (Int Bool) Bool)
(declare-fun Proc10 (Int Bool) Bool)
(declare-fun Proc0 (Int Bool Int Int) Bool)
(declare-fun Proc13 (Int Bool Int Bool Int) Bool)
(declare-fun Proc15 (Int Bool) Bool)
(declare-fun Proc12 (Int Bool Int) Bool)
(declare-fun Proc9 (Int Bool) Bool)
(declare-fun Proc7 (Int Bool Int) Bool)
(declare-fun Proc14 (Int Bool) Bool)
(declare-fun Proc2 (Int Bool) Bool)
(declare-fun Proc3 (Int Bool Int Int Int) Bool)
(declare-fun Proc11 (Int Bool Int) Bool)
(declare-fun Proc4 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc1 (Int Bool Int Int Int Int) Bool)
(declare-fun Proc17 (Int Bool) Bool)
(declare-fun Proc18 (Int Bool Int Bool Int) Bool)
(declare-fun Proc5 (Int Bool Int) Bool)
(declare-fun Proc6 (Int Bool Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool))
  (let ((a!1 (and (not (<= N (+ 24 P))) (not (<= N O))))
        (a!2 (and (not (<= L (+ 1 M))) (not (<= L N))))
        (a!3 (and (not (<= J (+ 1 K))) (not (<= J L)))))
  (let ((a!4 (or (not Q)
                 (not (= P O))
                 (not a!1)
                 (not (= M N))
                 (not a!2)
                 (not (= K L))
                 (not a!3)
                 (<= I 27)
                 (= H 0)
                 (= G 0)
                 (= F 0)
                 (not (Proc0 J Q P 20))
                 (not (= E D))
                 (not (and (= C E) (= B J))))))
    (=> (not a!4) (Proc1 O Q H A C B))))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool))
  (let ((a!1 (and (not (<= E (+ 1 F))) (not (<= E H)))))
  (let ((a!2 (or (not Q)
                 (not (Proc2 H Q))
                 (= G 0)
                 (not (= F H))
                 (not a!1)
                 (not (Proc3 E Q F 0 D))
                 (not (and (= C 0) (= B D))))))
    (=> (not a!2) (Proc4 H Q A G C B))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (Q Bool))
  (let ((a!1 (and (not (<= D (+ 1 F))) (not (<= D E)))))
  (let ((a!2 (not (or (not Q)
                      (not (= F E))
                      (not a!1)
                      (not (Proc5 D Q F))
                      (not (= C D))))))
    (=> a!2 (Proc6 E Q B A C))))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> Q (Proc5 B Q A))))
(assert (forall ((A Int) (B Int) (Q Bool)) (=> false (Proc7 B Q A))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (Q Bool))
  (let ((a!1 (and (not (<= G (+ 1 I))) (not (<= G H))))
        (a!3 (and (not (<= C (+ 1 D))) (not (<= C H)))))
  (let ((a!2 (or (= J 0)
                 (not (= I H))
                 (not a!1)
                 (not (and (Proc7 G Q I) (= F G)))
                 (not (= E F))))
        (a!4 (or (not (= D H))
                 (not a!3)
                 (not (and (Proc7 C Q D) (= F C)))
                 (not (= E F)))))
  (let ((a!5 (and a!4 (or (not (Proc6 H Q B J A)) (not (= F A)) (not (= E F))))))
  (let ((a!6 (and a!2 (or (not (= J 0)) a!5))))
    (=> (not (or (not Q) a!6)) (Proc3 H Q B J E))))))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc8 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc9 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc10 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (Q Bool)
         (R Bool)
         (S Bool)
         (T Bool))
  (let ((a!1 (not (and (not (<= H 0)) (Proc11 H T G))))
        (a!2 (not (and (= C E) (= R S) (= B F)))))
  (let ((a!3 (or (not (and (= E D) (not S))) a!2))
        (a!4 (or (= (not Q) T) (not (and (= E A) (= S Q))) a!2)))
  (let ((a!5 (not (or (not T)
                      a!1
                      (not (Proc10 G T))
                      (not (Proc9 G T))
                      (not (Proc8 G T))
                      (not (Proc12 G T F))
                      (and a!3 a!4)))))
    (=> a!5 (Proc13 H T C R B)))))))
(assert (forall ((A Int) (B Int) (C Int) (Q Bool)) (=> Q (Proc0 C Q B A))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (Q Bool))
  (let ((a!1 (or (not (= D C)) (not (and (= B D) (= A E)))))
        (a!2 (or (not (Proc15 E Q)) (not (= D F)) (not (and (= B D) (= A E))))))
  (let ((a!3 (not (or (not Q)
                      (not (Proc14 I Q))
                      (not (Proc4 I Q H G F E))
                      (and a!1 a!2)))))
    (=> a!3 (Proc16 I Q H G B A))))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc2 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (Q Bool))
  (let ((a!1 (and (not (<= K (+ 12 M))) (not (<= K L))))
        (a!2 (and (not (= B C))
                  (or (not (<= 0 D))
                      (not (= A 1))
                      (= A 0)
                      (not (Proc17 C Q))
                      (not (= B C))))))
  (let ((a!3 (not (or (not Q)
                      (not (= M L))
                      (not a!1)
                      (not (Proc1 K Q J M I H))
                      (not (<= 0 I))
                      (not (= G 1))
                      (= G 0)
                      (not (Proc16 H Q F E D C))
                      a!2))))
    (=> a!3 (Proc12 L Q B))))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc14 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc15 A Q))))
(assert (forall ((A Int) (Q Bool)) (=> Q (Proc17 A Q))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Bool)
         (U Int)
         (V Int)
         (W Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int)
         (F1 Int)
         (G1 Int)
         (H1 Int)
         (I1 Int)
         (J1 Int)
         (K1 Int)
         (L1 Int)
         (M1 Int)
         (N1 Int)
         (O1 Int)
         (P1 Int)
         (Q1 Int)
         (R1 Int)
         (S1 Int)
         (T1 Int)
         (U1 Int)
         (V1 Int)
         (W1 Int)
         (X1 Int)
         (Y1 Int)
         (Z1 Int)
         (A2 Int)
         (B2 Int))
  (let ((a!1 (and (= B2 A2)
                  (not (<= Z1 (+ 4 B2)))
                  (not (<= Z1 A2))
                  (= Y1 Z1)
                  (not (<= X1 (+ 332 Y1)))
                  (not (<= X1 Z1))
                  (= W1 X1)
                  (not (<= V1 (+ 4 W1)))))
        (a!2 (and (not (<= V1 X1))
                  (= U1 V1)
                  (not (<= T1 (+ 536 U1)))
                  (not (<= T1 V1))
                  (= S1 T1)
                  (not (<= R1 (+ 240 S1)))
                  (not (<= R1 T1))
                  (= Q1 R1)
                  (not (<= P1 (+ 240 Q1)))
                  (not (<= P1 R1))
                  (= O1 P1)
                  (not (<= N1 (+ 240 O1)))
                  (not (<= N1 P1))
                  (= M1 N1)
                  (not (<= L1 (+ 4 M1)))
                  (not (<= L1 N1))
                  (= K1 L1)
                  (not (<= J1 (+ 536 K1)))
                  (not (<= J1 L1))
                  (= I1 J1)
                  (not (<= H1 (+ 332 I1)))
                  (not (<= H1 J1))
                  (= G1 H1)
                  (not (<= F1 (+ 240 G1)))
                  (not (<= F1 H1))
                  (= E1 F1)
                  (not (<= D1 (+ 240 E1)))
                  (not (<= D1 F1))
                  (= C1 D1)
                  (not (<= B1 (+ 332 C1)))
                  (not (<= B1 D1))
                  (= A1 B1)
                  (not (<= Z (+ 4 A1)))
                  (not (<= Z B1))
                  (= Y Z)
                  (not (<= X (+ 68 Y)))
                  (not (<= X Z))
                  (= W X)
                  (not (<= V (+ 240 W)))
                  (not (<= V X))
                  (= U V)
                  (not (<= P (+ 240 U)))
                  (not (<= P V))
                  (= O P)
                  (not (<= N (+ 240 O)))
                  (not (<= N P))
                  (= M N)
                  (not (<= L (+ 240 M)))
                  (not (<= L N))
                  (= K L)
                  (not (<= J (+ 240 K)))
                  (not (<= J L))
                  (= I J)
                  (not (<= H (+ 40 I)))
                  (not (<= H J))
                  (= G H)
                  (not (<= F (+ 332 G)))
                  (not (<= F H))
                  (= E F)
                  (not (<= D (+ 4 E)))
                  (not (<= D F))
                  (= C D)
                  (not (<= B (+ 40 C)))
                  (not (<= B D)))))
  (let ((a!3 (not (or (not Q) (not a!1) (not a!2) (not (= A B))))))
    (=> a!3 (Proc11 A2 Q A))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (Q Bool) (R Bool) (S Bool))
  (let ((a!1 (or (not S) (not (and (Proc13 E true D R C) (not R))))))
    (=> (not a!1) (Proc18 E S B Q A)))))
(assert (let ((a!1 (exists ((V0 Int) (V1 Bool) (V2 Int) (V3 Bool) (V4 Int))
             (not (=> (and (Proc18 V0 V1 V2 V3 V4) (not false)) false)))))
  (not a!1)))

(check-sat)
