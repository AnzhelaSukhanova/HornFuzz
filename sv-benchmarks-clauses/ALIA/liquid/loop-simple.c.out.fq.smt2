(set-info :origin "benchmarks generated by liquid types http://goto.ucsd.edu/~rjhala/liquid/")
(set-logic HORN)
(declare-fun k_7 (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((__cil_tmp3_main Int)
         (VV Int)
         (i_main__SSA__phi_3 Int)
         (EREAD Int)
         (n_main__SSA__blk_0_1 Int)
         (EWRITE Int)
         (i_main__SSA__blk_8_1 Int)
         (n_main Int)
         (i_main Int)
         (i_main__SSA__blk_0_1 Int))
  (let ((a!1 (and (= n_main__SSA__blk_0_1 n_main__SSA__blk_0_1)
                  (= n_main n_main)
                  (= i_main__SSA__blk_8_1 i_main__SSA__blk_8_1)
                  (= i_main__SSA__blk_0_1 i_main__SSA__blk_0_1)
                  (= i_main i_main)
                  (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= VV i_main__SSA__blk_8_1)
                  (not (= __cil_tmp3_main 0))
                  (= i_main__SSA__blk_8_1 (+ i_main__SSA__phi_3 1))
                  (= i_main__SSA__blk_0_1 0)
                  (= __cil_tmp3_main
                     (ite (< i_main__SSA__phi_3 n_main__SSA__blk_0_1) 1 0))
                  (k_7 EREAD
                       EWRITE
                       i_main__SSA__phi_3
                       i_main
                       i_main__SSA__blk_0_1
                       i_main__SSA__phi_3
                       n_main
                       n_main__SSA__blk_0_1)
                  true)))
    (=> a!1
        (k_7 EREAD
             EWRITE
             VV
             i_main
             i_main__SSA__blk_0_1
             i_main__SSA__blk_8_1
             n_main
             n_main__SSA__blk_0_1)))))
(assert (forall ((VV Int)
         (EREAD Int)
         (n_main__SSA__blk_0_1 Int)
         (EWRITE Int)
         (i_main__SSA__blk_0_1_smt_3_0 Int)
         (n_main Int)
         (i_main Int)
         (i_main__SSA__blk_0_1 Int))
  (=> (and (= n_main__SSA__blk_0_1 n_main__SSA__blk_0_1)
           (= n_main n_main)
           (= i_main__SSA__blk_0_1 i_main__SSA__blk_0_1_smt_3_0)
           (= i_main__SSA__blk_0_1 i_main__SSA__blk_0_1)
           (= i_main i_main)
           (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= VV i_main__SSA__blk_0_1)
           (= i_main__SSA__blk_0_1 0)
           true)
      (k_7 EREAD
           EWRITE
           VV
           i_main
           i_main__SSA__blk_0_1
           i_main__SSA__blk_0_1_smt_3_0
           n_main
           n_main__SSA__blk_0_1))))
(assert (forall ((__cil_tmp3_main Int)
         (VV Int)
         (EREAD Int)
         (i_main__SSA__phi_3 Int)
         (__cil_tmp4_main Int)
         (n_main__SSA__blk_0_1 Int)
         (EWRITE Int)
         (n_main Int)
         (i_main Int)
         (i_main__SSA__blk_0_1 Int))
  (let ((a!1 (and (not (not (= VV 0)))
                  (k_7 EREAD
                       EWRITE
                       i_main__SSA__phi_3
                       i_main
                       i_main__SSA__blk_0_1
                       i_main__SSA__phi_3
                       n_main
                       n_main__SSA__blk_0_1)
                  (= __cil_tmp3_main
                     (ite (< i_main__SSA__phi_3 n_main__SSA__blk_0_1) 1 0))
                  (= __cil_tmp4_main (ite (>= i_main__SSA__phi_3 0) 1 0))
                  (= i_main__SSA__blk_0_1 0)
                  (not (not (= __cil_tmp3_main 0)))
                  (= VV __cil_tmp4_main)
                  true)))
    (=> a!1 false))))

(check-sat)
