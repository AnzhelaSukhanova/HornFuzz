(set-info :origin "benchmarks generated by liquid types http://goto.ucsd.edu/~rjhala/liquid/")
(set-logic HORN)
(declare-fun k_7 (Int Int Int Int) Bool)
(declare-fun k_6 (Int Int Int Int) Bool)
(declare-fun k_8 (Int Int Int Int Int Int) Bool)
(assert (forall ((VV Int)
         (EREAD Int)
         (x_abs Int)
         (__cil_tmp3_abs Int)
         (__cil_tmp2_abs Int)
         (EWRITE Int))
  (let ((a!1 (and (= x_abs x_abs)
                  (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= VV __cil_tmp3_abs)
                  (not (not (= __cil_tmp2_abs 0)))
                  (= __cil_tmp3_abs (- 0 x_abs))
                  (= __cil_tmp2_abs (ite (> x_abs 0) 1 0))
                  (k_7 EREAD EWRITE x_abs x_abs)
                  true)))
    (=> a!1 (k_6 EREAD EWRITE VV x_abs)))))
(assert (forall ((VV Int) (x_abs Int) (EREAD Int) (EWRITE Int) (__cil_tmp2_abs Int))
  (let ((a!1 (and (= x_abs x_abs)
                  (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= VV x_abs)
                  (not (= __cil_tmp2_abs 0))
                  (= __cil_tmp2_abs (ite (> x_abs 0) 1 0))
                  (k_7 EREAD EWRITE x_abs x_abs)
                  true)))
    (=> a!1 (k_6 EREAD EWRITE VV x_abs)))))
(assert (forall ((x_main__SSA__blk_0_1 Int) (VV Int) (EREAD Int) (EWRITE Int))
  (=> (and (= x_main__SSA__blk_0_1 x_main__SSA__blk_0_1)
           (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= VV x_main__SSA__blk_0_1)
           true)
      (k_7 EREAD EWRITE VV x_main__SSA__blk_0_1))))
(assert (forall ((VV Int)
         (EREAD Int)
         (y_main Int)
         (x_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (=> (and (= y_main y_main)
           (= x_main__SSA__blk_0_1 x_main__SSA__blk_0_1)
           (= x_main x_main)
           (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (k_6 EREAD EWRITE VV x_main__SSA__blk_0_1)
           true)
      (k_8 EREAD EWRITE VV x_main x_main__SSA__blk_0_1 y_main))))
(assert (forall ((__cil_tmp3_main Int)
         (y_main__SSA__blk_0_1 Int)
         (VV Int)
         (EREAD Int)
         (y_main Int)
         (x_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (let ((a!1 (and (not (not (= VV 0)))
                  (k_8 EREAD
                       EWRITE
                       y_main__SSA__blk_0_1
                       x_main
                       x_main__SSA__blk_0_1
                       y_main)
                  (= __cil_tmp3_main (ite (>= y_main__SSA__blk_0_1 0) 1 0))
                  (= VV __cil_tmp3_main)
                  true)))
    (=> a!1 false))))

(check-sat)
