(set-info :origin "benchmarks generated by liquid types http://goto.ucsd.edu/~rjhala/liquid/")
(set-logic HORN)
(declare-fun k_9 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun k_10 (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((VV Int)
         (y_main__SSA__blk_2_1 Int)
         (EREAD Int)
         (y_main Int)
         (x_main__SSA__blk_2_1 Int)
         (b_main Int)
         (b_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (=> (and (= y_main__SSA__blk_2_1 y_main__SSA__blk_2_1)
           (= y_main y_main)
           (= x_main__SSA__blk_2_1 x_main__SSA__blk_2_1)
           (= x_main x_main)
           (= b_main__SSA__blk_0_1 b_main__SSA__blk_0_1)
           (= b_main b_main)
           (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= VV y_main__SSA__blk_2_1)
           (not (= b_main__SSA__blk_0_1 0))
           (= y_main__SSA__blk_2_1 10)
           (= x_main__SSA__blk_2_1 10)
           true)
      (k_9 EREAD
           EWRITE
           VV
           b_main
           b_main__SSA__blk_0_1
           x_main
           x_main__SSA__blk_2_1
           y_main
           y_main__SSA__blk_2_1))))
(assert (forall ((VV Int)
         (y_main__SSA__blk_2_1 Int)
         (EREAD Int)
         (y_main Int)
         (x_main__SSA__blk_2_1 Int)
         (b_main Int)
         (b_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (=> (and (= y_main__SSA__blk_2_1 y_main__SSA__blk_2_1)
           (= y_main y_main)
           (= x_main__SSA__blk_2_1 x_main__SSA__blk_2_1)
           (= x_main x_main)
           (= b_main__SSA__blk_0_1 b_main__SSA__blk_0_1)
           (= b_main b_main)
           (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= VV x_main__SSA__blk_2_1)
           (not (= b_main__SSA__blk_0_1 0))
           (= y_main__SSA__blk_2_1 10)
           (= x_main__SSA__blk_2_1 10)
           true)
      (k_10 EREAD
            EWRITE
            VV
            b_main
            b_main__SSA__blk_0_1
            x_main
            x_main__SSA__blk_2_1
            y_main
            y_main__SSA__blk_2_1))))
(assert (forall ((VV Int)
         (x_main__SSA__blk_3_1 Int)
         (EREAD Int)
         (y_main Int)
         (y_main__SSA__blk_3_1 Int)
         (b_main Int)
         (b_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (let ((a!1 (and (= y_main__SSA__blk_3_1 y_main__SSA__blk_3_1)
                  (= y_main y_main)
                  (= x_main__SSA__blk_3_1 x_main__SSA__blk_3_1)
                  (= x_main x_main)
                  (= b_main__SSA__blk_0_1 b_main__SSA__blk_0_1)
                  (= b_main b_main)
                  (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= VV y_main__SSA__blk_3_1)
                  (not (not (= b_main__SSA__blk_0_1 0)))
                  (= y_main__SSA__blk_3_1 20)
                  (= x_main__SSA__blk_3_1 20)
                  true)))
    (=> a!1
        (k_9 EREAD
             EWRITE
             VV
             b_main
             b_main__SSA__blk_0_1
             x_main
             x_main__SSA__blk_3_1
             y_main
             y_main__SSA__blk_3_1)))))
(assert (forall ((VV Int)
         (x_main__SSA__blk_3_1 Int)
         (EREAD Int)
         (y_main Int)
         (y_main__SSA__blk_3_1 Int)
         (b_main Int)
         (b_main__SSA__blk_0_1 Int)
         (x_main Int)
         (EWRITE Int))
  (let ((a!1 (and (= y_main__SSA__blk_3_1 y_main__SSA__blk_3_1)
                  (= y_main y_main)
                  (= x_main__SSA__blk_3_1 x_main__SSA__blk_3_1)
                  (= x_main x_main)
                  (= b_main__SSA__blk_0_1 b_main__SSA__blk_0_1)
                  (= b_main b_main)
                  (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= VV x_main__SSA__blk_3_1)
                  (not (not (= b_main__SSA__blk_0_1 0)))
                  (= y_main__SSA__blk_3_1 20)
                  (= x_main__SSA__blk_3_1 20)
                  true)))
    (=> a!1
        (k_10 EREAD
              EWRITE
              VV
              b_main
              b_main__SSA__blk_0_1
              x_main
              x_main__SSA__blk_3_1
              y_main
              y_main__SSA__blk_3_1)))))
(assert (forall ((VV Int)
         (EREAD Int)
         (__cil_tmp4_main Int)
         (y_main Int)
         (x_main__SSA__phi_4 Int)
         (b_main Int)
         (b_main__SSA__blk_0_1 Int)
         (y_main__SSA__phi_4 Int)
         (x_main Int)
         (EWRITE Int))
  (let ((a!1 (and (not (not (= VV 0)))
                  (k_10 EREAD
                        EWRITE
                        x_main__SSA__phi_4
                        b_main
                        b_main__SSA__blk_0_1
                        x_main
                        x_main__SSA__phi_4
                        y_main
                        y_main__SSA__phi_4)
                  (k_9 EREAD
                       EWRITE
                       y_main__SSA__phi_4
                       b_main
                       b_main__SSA__blk_0_1
                       x_main
                       x_main__SSA__phi_4
                       y_main
                       y_main__SSA__phi_4)
                  (= __cil_tmp4_main
                     (ite (= x_main__SSA__phi_4 y_main__SSA__phi_4) 1 0))
                  (= VV __cil_tmp4_main)
                  true)))
    (=> a!1 false))))

(check-sat)
