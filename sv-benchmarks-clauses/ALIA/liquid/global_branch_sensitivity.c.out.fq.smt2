(set-info :origin "benchmarks generated by liquid types http://goto.ucsd.edu/~rjhala/liquid/")
(set-logic HORN)
(declare-fun k_8
             (Int Int Int (Array Int Int) (Array Int Int) (Array Int Int))
             Bool)
(declare-fun k_10
             (Int Int Int Int (Array Int Int) (Array Int Int) (Array Int Int))
             Bool)
(assert (forall ((C5_Ix_0 Int)
         (VV Int)
         (lqn_0 Int)
         (EREAD Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (=> (and (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= C5_Ix_0 C5_Ix_0)
           (= VV C5_Ix_0)
           (= lqn_0 0)
           (= C5_Ix_0 0)
           true)
      (k_10 C5_Ix_0 EREAD EWRITE VV BLOCK_BEGIN BLOCK_END UNCHECKED))))
(assert (forall ((VV Int)
         (EREAD Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (=> (and (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (> VV 0)
           (= (select BLOCK_BEGIN VV) VV)
           (= (select BLOCK_END VV) (+ VV 4))
           true)
      (k_8 EREAD EWRITE VV BLOCK_BEGIN BLOCK_END UNCHECKED))))
(assert (forall ((__cil_tmp1_main Int)
         (__cil_tmp3_main Int)
         (__cil_tmp6_main Int)
         (VV Int)
         (__cil_tmp5_main Int)
         (EREAD Int)
         (__cil_tmp2_main Int)
         (__cil_tmp8_main Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp7_main Int)
         (__cil_tmp4_main Int)
         (lqn_1 Int)
         (C4_Ix_0 Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (and (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= C4_Ix_0 C4_Ix_0)
                  (= VV C4_Ix_0)
                  (not (= __cil_tmp2_main 0))
                  (= __cil_tmp7_main __cil_tmp5_main)
                  (= __cil_tmp6_main __cil_tmp5_main)
                  (= __cil_tmp4_main (ite (> __cil_tmp3_main 0) 1 0))
                  (= __cil_tmp3_main __cil_tmp5_main)
                  (= __cil_tmp2_main (ite (> __cil_tmp1_main 0) 1 0))
                  (= __cil_tmp1_main __cil_tmp5_main)
                  (= C4_Ix_0 __cil_tmp5_main)
                  (k_8 EREAD
                       EWRITE
                       x__csolve_heapify__
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (k_10 lqn_1
                        EREAD
                        EWRITE
                        lqn_1
                        BLOCK_BEGIN
                        BLOCK_END
                        UNCHECKED)
                  (k_8 EREAD
                       EWRITE
                       __cil_tmp8_main
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  true)))
    (=> a!1 (k_10 C4_Ix_0 EREAD EWRITE VV BLOCK_BEGIN BLOCK_END UNCHECKED)))))
(assert (forall ((__cil_tmp6_main Int)
         (__cil_tmp5_main Int)
         (EREAD Int)
         (__cil_tmp2_main Int)
         (__cil_tmp8_main Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp1_main Int)
         (VV Int)
         (lqn_1 Int)
         (C4_Ix_0 Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (and (= VV VV)
                  (= EWRITE EWRITE)
                  (= EREAD EREAD)
                  (= C4_Ix_0 C4_Ix_0)
                  (= VV C4_Ix_0)
                  (not (not (= __cil_tmp2_main 0)))
                  (= __cil_tmp6_main __cil_tmp5_main)
                  (= __cil_tmp2_main (ite (> __cil_tmp1_main 0) 1 0))
                  (= __cil_tmp1_main __cil_tmp5_main)
                  (= C4_Ix_0 __cil_tmp5_main)
                  (k_8 EREAD
                       EWRITE
                       x__csolve_heapify__
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (k_10 lqn_1
                        EREAD
                        EWRITE
                        lqn_1
                        BLOCK_BEGIN
                        BLOCK_END
                        UNCHECKED)
                  (k_8 EREAD
                       EWRITE
                       __cil_tmp8_main
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  true)))
    (=> a!1 (k_10 C4_Ix_0 EREAD EWRITE VV BLOCK_BEGIN BLOCK_END UNCHECKED)))))
(assert (forall ((__cil_tmp6_main Int)
         (VV Int)
         (__cil_tmp5_main Int)
         (EREAD Int)
         (__cil_tmp2_main Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp8_main Int)
         (__cil_tmp1_main Int)
         (lqn_1 Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (or (= (select UNCHECKED VV) 1)
                 (and (<= (select BLOCK_BEGIN VV) VV)
                      (< VV (select BLOCK_END VV))
                      true)
                 false)))
  (let ((a!2 (and (not a!1)
                  (k_8 EREAD
                       EWRITE
                       __cil_tmp8_main
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (k_10 lqn_1
                        EREAD
                        EWRITE
                        lqn_1
                        BLOCK_BEGIN
                        BLOCK_END
                        UNCHECKED)
                  (k_8 EREAD
                       EWRITE
                       x__csolve_heapify__
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (= __cil_tmp1_main __cil_tmp5_main)
                  (= __cil_tmp2_main (ite (> __cil_tmp1_main 0) 1 0))
                  (= __cil_tmp6_main __cil_tmp5_main)
                  (not (= __cil_tmp2_main 0))
                  (< VV (+ __cil_tmp8_main 4))
                  (<= __cil_tmp8_main VV)
                  (= (select UNCHECKED VV) (select UNCHECKED __cil_tmp8_main))
                  (= (select BLOCK_END VV) (select BLOCK_END __cil_tmp8_main))
                  (= (select BLOCK_BEGIN VV)
                     (select BLOCK_BEGIN __cil_tmp8_main))
                  true)))
    (=> a!2 false)))))
(assert (forall ((__cil_tmp3_main Int)
         (__cil_tmp6_main Int)
         (VV Int)
         (__cil_tmp5_main Int)
         (EREAD Int)
         (__cil_tmp4_main Int)
         (__cil_tmp2_main Int)
         (__cil_tmp7_main Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp8_main Int)
         (__cil_tmp1_main Int)
         (lqn_1 Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (and (not (not (= VV 0)))
                  (k_8 EREAD
                       EWRITE
                       __cil_tmp8_main
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (k_10 lqn_1
                        EREAD
                        EWRITE
                        lqn_1
                        BLOCK_BEGIN
                        BLOCK_END
                        UNCHECKED)
                  (k_8 EREAD
                       EWRITE
                       x__csolve_heapify__
                       BLOCK_BEGIN
                       BLOCK_END
                       UNCHECKED)
                  (= __cil_tmp1_main __cil_tmp5_main)
                  (= __cil_tmp2_main (ite (> __cil_tmp1_main 0) 1 0))
                  (= __cil_tmp3_main __cil_tmp5_main)
                  (= __cil_tmp4_main (ite (> __cil_tmp3_main 0) 1 0))
                  (= __cil_tmp6_main __cil_tmp5_main)
                  (= __cil_tmp7_main __cil_tmp5_main)
                  (not (= __cil_tmp2_main 0))
                  (= VV __cil_tmp4_main)
                  true)))
    (=> a!1 false))))
(assert (forall ((VV Int)
         (EREAD Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp8_main Int)
         (lqn_1 Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (or (= (select UNCHECKED VV) 1)
                 (and (<= (select BLOCK_BEGIN VV) VV)
                      (< VV (select BLOCK_END VV))
                      true)
                 false)))
    (=> (and (not a!1)
             (k_8 EREAD EWRITE __cil_tmp8_main BLOCK_BEGIN BLOCK_END UNCHECKED)
             (k_10 lqn_1 EREAD EWRITE lqn_1 BLOCK_BEGIN BLOCK_END UNCHECKED)
             (k_8 EREAD
                  EWRITE
                  x__csolve_heapify__
                  BLOCK_BEGIN
                  BLOCK_END
                  UNCHECKED)
             (< VV (+ __cil_tmp8_main 4))
             (<= __cil_tmp8_main VV)
             (= (select UNCHECKED VV) (select UNCHECKED __cil_tmp8_main))
             (= (select BLOCK_END VV) (select BLOCK_END __cil_tmp8_main))
             (= (select BLOCK_BEGIN VV) (select BLOCK_BEGIN __cil_tmp8_main))
             true)
        false))))
(assert (forall ((x__csolve_heapify__ Int)
         (__cil_tmp8_main Int)
         (VV Int)
         (EWRITE Int)
         (EREAD Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (let ((a!1 (or (= (select UNCHECKED VV) 1)
                 (and (<= (select BLOCK_BEGIN VV) VV)
                      (< VV (select BLOCK_END VV))
                      true)
                 false)))
    (=> (and (not a!1)
             (k_8 EREAD EWRITE __cil_tmp8_main BLOCK_BEGIN BLOCK_END UNCHECKED)
             (k_8 EREAD
                  EWRITE
                  x__csolve_heapify__
                  BLOCK_BEGIN
                  BLOCK_END
                  UNCHECKED)
             (< VV (+ __cil_tmp8_main 4))
             (<= __cil_tmp8_main VV)
             (= (select UNCHECKED VV) (select UNCHECKED __cil_tmp8_main))
             (= (select BLOCK_END VV) (select BLOCK_END __cil_tmp8_main))
             (= (select BLOCK_BEGIN VV) (select BLOCK_BEGIN __cil_tmp8_main))
             true)
        false))))
(assert (forall ((VV Int)
         (A1_Ix_0 Int)
         (EREAD Int)
         (x__csolve_heapify__ Int)
         (__cil_tmp8_main Int)
         (EWRITE Int)
         (BLOCK_BEGIN (Array Int Int))
         (BLOCK_END (Array Int Int))
         (UNCHECKED (Array Int Int)))
  (=> (and (= VV VV)
           (= EWRITE EWRITE)
           (= EREAD EREAD)
           (= A1_Ix_0 A1_Ix_0)
           (= VV A1_Ix_0)
           false
           (k_8 EREAD
                EWRITE
                x__csolve_heapify__
                BLOCK_BEGIN
                BLOCK_END
                UNCHECKED)
           (k_8 EREAD EWRITE __cil_tmp8_main BLOCK_BEGIN BLOCK_END UNCHECKED)
           true)
      (k_10 A1_Ix_0 EREAD EWRITE VV BLOCK_BEGIN BLOCK_END UNCHECKED))))

(check-sat)
