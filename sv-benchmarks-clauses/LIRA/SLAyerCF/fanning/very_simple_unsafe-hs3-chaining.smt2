(set-info :origin "benchmarks generated from SLAYer trace refinement by Jael Kriener")
(set-logic HORN)
(declare-fun transition-0 (Real Real Real Real Bool) Bool)
(declare-fun transition-2
             (Real Real Real Real Real Real Bool Bool Real Real)
             Bool)
(declare-fun transition-1 (Real Real Real Real Real Bool Real) Bool)
(declare-fun transition-3
             (Real Real Real Real Real Real Real Bool Bool Bool Real Real Real)
             Bool)
(assert (forall ((?A Real) (?B Real) (?C Real) )(=> (|transition-0| 2.0 ?C ?B ?A false) (|transition-0| 1.0 ?C ?B ?A false)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) )(=> (|transition-1| 2.0 ?E ?D ?C ?B false ?A) (|transition-1| 1.0 ?E ?D ?C ?B false ?A)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) )(=> (|transition-2| 2.0 ?H ?G ?E ?D ?C false ?F ?B ?A) (|transition-2| 1.0 ?H ?G ?E ?D ?C false ?F ?B ?A)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Bool) (?J Real) (?K Real) )(let (($x20647 (|transition-3| 1.0 ?K ?J ?H ?G ?E ?D false ?I ?F ?C ?B ?A)))
(let (($x15037 (|transition-3| 2.0 ?K ?J ?H ?G ?E ?D false ?I ?F ?C ?B ?A)))
(=> $x15037 $x20647))))
)
(assert (forall ((?A Real) (?B Real) )(|transition-0| 2.0 ?B 1.0 ?A false))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) )(=> (= ?A (- 1.0)) (|transition-1| 2.0 ?D 1.0 ?C ?B false ?A)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Real) )(let (($x19596 (|transition-2| 2.0 ?F 1.0 ?E ?D ?C false false ?B ?A)))
(=> (and (= ?A (- 1.0)) (= ?B (- 1.0))) $x19596)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Real) (?G Real) (?H Real) )(let (($x18296 (|transition-3| 2.0 ?H 1.0 ?G ?F ?E ?D false false false ?C ?B ?A)))
(=> (and (= ?A (- 1.0)) (= ?B (- 1.0)) (= ?C (- 1.0))) $x18296)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) )(=> (|transition-0| 1.0 ?D ?B ?A false) (|transition-0| 0.0 ?C ?B ?A false)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Real) )(=> (|transition-1| 1.0 ?F ?D ?C ?B false ?A) (|transition-1| 0.0 ?E ?D ?C ?B false ?A)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Real) )(let (($x23836 (or (not (= ?E 1.0)) (not ?F))))
(let (($x2711 (and (|transition-2| 1.0 ?I ?G ?E ?D ?C false ?F ?B ?A) $x23836)))
(=> $x2711 (|transition-2| 0.0 ?H ?G ?E ?D ?C false ?F ?B ?A)))))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Bool) (?J Real) (?K Real) (?L Real) )(let (($x703 (|transition-3| 0.0 ?K ?J ?H ?G ?E ?D false ?I ?F ?C ?B ?A)))
(let (($x23836 (or (not (= ?H 1.0)) (not ?I))))
(let (($x15202 (|transition-3| 1.0 ?L ?J ?H ?G ?E ?D false ?I ?F ?C ?B ?A)))
(=> (and $x15202 $x23836 (or (not (= ?H 2.0)) (not ?F))) $x703)))))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) )(=> (|transition-0| 0.0 ?E ?D ?C false) (|transition-1| 0.0 ?E ?D ?C ?B false ?A)))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Real) (?J Real) )(let (($x15684 (and (|transition-1| 0.0 ?J ?I ?H ?G false ?E) (= ?G ?D) (= ?E ?B))))
(=> $x15684 (|transition-2| 0.0 ?J ?I ?H ?D ?C false ?F ?B ?A))))
)
(assert (forall ((?A Real) (?B Real) (?C Real) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Bool) (?J Real) (?K Real) (?L Real) (?M Bool) (?N Real) (?O Real) (?P Real) )(let (($x6394 (|transition-3| 0.0 ?P ?O ?N ?G ?E ?D false ?I ?F ?C ?B ?A)))
(let (($x13927 (and (|transition-2| 0.0 ?P ?O ?N ?L ?K false ?M ?J ?H) (= ?L ?G) (= ?K ?E) (= ?M ?I) (= ?J ?C) (= ?H ?B))))
(=> $x13927 $x6394))))
)
(assert (not (exists ((nondet1 Real) (front Real) (prog_var_0-x Real))
       (transition-0 0.0 nondet1 front prog_var_0-x false))))
(check-sat)
