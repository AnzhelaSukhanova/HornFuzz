(set-info :origin "SVCOMP13 benchmarks generated by Arie Gurfinkel")
(set-logic HORN)
(declare-fun cp-rel-entry () Bool)
(declare-fun cp-rel-__UFO__0 () Bool)
(declare-fun cp-rel-ERROR () Bool)
(declare-fun cp-rel-bb1 (Real) Bool)
(assert |cp-rel-entry|)
(assert (forall ((?A Real) (?B Bool) (?C Bool) (?D Real) )(let (($x394616 (= ?B true)))
(let (($x364816 (and |cp-rel-entry| (>= ?A 0.0) (<= ?A 0.0) (not (= ?C true)) $x394616 (= ?C (= ?D 0.0)))))
(=> $x364816 (|cp-rel-bb1| ?A)))))
)
(assert (forall ((?A Real) (?B Real) (?C Bool) (?D Bool) (?E Real) (?F Real) )(let (($x394616 (= ?D true)))
(let (($x343282 (not $x394616)))
(let (($x156341 (and (|cp-rel-bb1| ?A) (= ?D (= ?F 0.0)) (>= ?B ?E) (<= ?B ?E) $x343282 (= ?C true) (= ?E (+ 1.0 ?A)))))
(=> $x156341 (|cp-rel-bb1| ?B))))))
)
(assert (forall ((?A Bool) (?B Bool) (?C Real) (?D Bool) (?E Bool) (?F Real) (?G Real) (?H Bool) (?I Bool) (?J Real) )(let (($x229015 (= ?H (= ?G ?J))))
(let (($x104808 (and ?A ?E ?B (<= ?F 10.0) (>= ?F 10.0) (<= ?G 10.0) (>= ?G 10.0))))
(let (($x581770 (or (not ?D) $x104808)))
(let (($x67597 (or (not ?D) ?E)))
(let (($x853854 (= ?D true)))
(let (($x394616 (= ?H true)))
(let (($x507914 (= ?B (= ?C 0.0))))
(let (($x203306 (= ?I (not (<= ?F 0.0)))))
(let (($x166479 (= ?J (ite ?I ?F 0.0))))
(=> (and |cp-rel-entry| $x166479 $x203306 $x507914 $x394616 $x853854 $x67597 $x581770 $x229015) |cp-rel-__UFO__0|)))))))))))
)
(assert (forall ((?A Real) (?B Bool) (?C Bool) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Bool) (?J Bool) (?K Real) (?L Bool) (?M Bool) (?N Bool) (?O Real) )(let (($x350693 (= ?I (= ?H ?K))))
(let (($x595725 (or (not ?L) (and ?B ?M ?C))))
(let (($x391710 (or (not ?L) ?M)))
(let (($x863310 (and ?L ?N (<= ?G ?O) (>= ?G ?O) (<= ?H ?O) (>= ?H ?O))))
(let (($x331369 (or (not ?F) $x863310)))
(let (($x55650 (or (not ?F) ?N)))
(let (($x186386 (= ?F true)))
(let (($x853854 (= ?I true)))
(let (($x551581 (= ?C (= ?E 0.0))))
(let (($x868680 (= ?D (+ 1.0 ?A))))
(let (($x260027 (= ?O (+ 11.0 ?A))))
(let (($x538624 (= ?J (not (<= ?G 0.0)))))
(let (($x869381 (= ?K (ite ?J ?G 0.0))))
(let (($x579473 (|cp-rel-bb1| ?A)))
(let (($x220391 (and $x579473 $x869381 $x538624 $x260027 $x868680 $x551581 $x853854 $x186386 $x55650 $x331369 $x391710 $x595725 $x350693)))
(=> $x220391 |cp-rel-__UFO__0|)))))))))))))))))
)
(assert (forall ((?A Bool) )(=> (and |cp-rel-__UFO__0| (= ?A true)) |cp-rel-__UFO__0|))
)
(assert (forall ((?A Bool) (?B Bool) (?C Real) (?D Bool) (?E Bool) (?F Real) (?G Real) (?H Bool) (?I Bool) (?J Real) )(let (($x229015 (= ?H (= ?G ?J))))
(let (($x104808 (and ?A ?E ?B (<= ?F 10.0) (>= ?F 10.0) (<= ?G 10.0) (>= ?G 10.0))))
(let (($x581770 (or (not ?D) $x104808)))
(let (($x67597 (or (not ?D) ?E)))
(let (($x853854 (= ?D true)))
(let (($x394616 (= ?H true)))
(let (($x343282 (not $x394616)))
(let (($x507914 (= ?B (= ?C 0.0))))
(let (($x203306 (= ?I (not (<= ?F 0.0)))))
(let (($x166479 (= ?J (ite ?I ?F 0.0))))
(=> (and |cp-rel-entry| $x166479 $x203306 $x507914 $x343282 $x853854 $x67597 $x581770 $x229015) |cp-rel-ERROR|))))))))))))
)
(assert (forall ((?A Real) (?B Bool) (?C Bool) (?D Real) (?E Real) (?F Bool) (?G Real) (?H Real) (?I Bool) (?J Bool) (?K Real) (?L Bool) (?M Bool) (?N Bool) (?O Real) )(let (($x350693 (= ?I (= ?H ?K))))
(let (($x595725 (or (not ?L) (and ?B ?M ?C))))
(let (($x391710 (or (not ?L) ?M)))
(let (($x863310 (and ?L ?N (<= ?G ?O) (>= ?G ?O) (<= ?H ?O) (>= ?H ?O))))
(let (($x331369 (or (not ?F) $x863310)))
(let (($x55650 (or (not ?F) ?N)))
(let (($x186386 (= ?F true)))
(let (($x551581 (= ?C (= ?E 0.0))))
(let (($x868680 (= ?D (+ 1.0 ?A))))
(let (($x260027 (= ?O (+ 11.0 ?A))))
(let (($x538624 (= ?J (not (<= ?G 0.0)))))
(let (($x869381 (= ?K (ite ?J ?G 0.0))))
(let (($x579473 (|cp-rel-bb1| ?A)))
(let (($x374802 (and $x579473 $x869381 $x538624 $x260027 $x868680 $x551581 (not (= ?I true)) $x186386 $x55650 $x331369 $x391710 $x595725 $x350693)))
(=> $x374802 |cp-rel-ERROR|))))))))))))))))
)
(assert (not cp-rel-ERROR))
(check-sat)
