(set-info :origin "NTS benchmark converted to SMT-LIB2 using Eldarica (http://lara.epfl.ch/w/eldarica)")
(set-logic HORN)
(declare-fun main_q2 (Int Int Int Int) Bool)
(declare-fun main_qf () Bool)
(declare-fun main_q0 (Int Int Int Int) Bool)
(declare-fun main_q1 (Int Int Int Int) Bool)
(declare-fun countZero_q6 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q7 (Int Int Int Int) Bool)
(declare-fun countZero_q4 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q5 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q2 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q3 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q1 (Int Int Int Int Int Int) Bool)
(declare-fun countZero_q0 (Int Int Int Int Int Int) Bool)
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int))(=>(and (main_q2 ?A ?B ?C ?D)(<= ?C ?D)) main_qf)))
(assert(not (exists((?A Int)(?B Int)(?C Int)(?D Int))(and (main_q2 ?A ?B ?C ?D)(> ?C ?D)))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int))(=>(and (main_q0 ?A ?B ?E ?F)(> ?D 0)) (main_q1 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int))(=>(and (= ?A ?C) (= ?B ?D)) (main_q0 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q6 ?A ?E ?B ?F ?G ?H)(and (= ?C 1) (and (= ?G ?I) (= ?H ?D)))) (countZero_q7 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q4 ?A ?E ?B ?F ?G ?H)(and (= ?C (+ ?G 1)) (and (= ?G ?I) (= ?H ?D)))) (countZero_q7 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q2 ?A ?B ?C ?G ?H ?I)(and (not (= (mod ?I 10) 0)) (and (= ?H ?E) (= ?I ?F)))) (countZero_q5 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q2 ?A ?B ?C ?G ?H ?I)(and (= (mod ?I 10) 0) (and (and (= ?G ?D) (= ?H ?E)) (= ?I ?F)))) (countZero_q3 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q1 ?A ?E ?B ?F ?G ?H)(and (= ?C 0) (and (= ?G ?I) (= ?H ?D)))) (countZero_q7 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q0 ?A ?B ?C ?G ?H ?I)(and (or (= ?I 0) (= ?I 10)) (and (and (= ?G ?D) (= ?H ?E)) (= ?I ?F)))) (countZero_q6 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q0 ?A ?B ?C ?G ?H ?I)(and (> ?I 10) (and (and (= ?G ?D) (= ?H ?E)) (= ?I ?F)))) (countZero_q2 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int))(=>(and (countZero_q0 ?A ?B ?C ?G ?H ?I)(and (and (< ?I 10) (not (= ?I 0))) (and (and (= ?G ?D) (= ?H ?E)) (= ?I ?F)))) (countZero_q1 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int)(?K Int)(?L Int)(?M Int))(=>(and (and (and (and (countZero_q3 ?A ?B ?C ?G ?H ?I)(= ?J (div ?I 10)))(countZero_q7 ?K ?J ?L ?M))(= ?L ?E))(and (= ?G ?D) (= ?I ?F))) (countZero_q4 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int)(?K Int)(?L Int))(=>(and (and (countZero_q3 ?G ?H ?I ?J ?K ?L)(= ?C (div ?L 10)))(and (= ?A ?D) (= ?C ?F))) (countZero_q0 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int)(?K Int)(?L Int)(?M Int))(=>(and (and (and (and (countZero_q5 ?A ?E ?B ?F ?G ?H)(= ?I (div ?H 10)))(countZero_q7 ?J ?I ?K ?L))(= ?K ?C))(and (= ?G ?M) (= ?H ?D))) (countZero_q7 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int)(?K Int)(?L Int))(=>(and (and (countZero_q5 ?G ?H ?I ?J ?K ?L)(= ?C (div ?L 10)))(and (= ?A ?D) (= ?C ?F))) (countZero_q0 ?A ?B ?C ?D ?E ?F))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int))(=>(and (and (and (and (main_q1 ?A ?B ?E ?F)(= ?G ?F))(countZero_q7 ?H ?G ?I ?J))(= ?I ?C))(= ?F ?D)) (main_q2 ?A ?B ?C ?D))))
(assert(forall((?A Int)(?B Int)(?C Int)(?D Int)(?E Int)(?F Int)(?G Int)(?H Int)(?I Int)(?J Int))(=>(and (and (main_q1 ?G ?H ?I ?J)(= ?C ?J))(and (= ?A ?D) (= ?C ?F))) (countZero_q0 ?A ?B ?C ?D ?E ?F))))
(check-sat)
